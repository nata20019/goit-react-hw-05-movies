{"version":3,"file":"static/js/884.0b77ab00.chunk.js","mappings":"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","sources":["api/themoviedb-api.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = process.env.af181d8638fc4af5618fbe58b42ee124;\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// Перевірка наявності API ключа\nif (!API_KEY) {\n  console.error(\n    'API key is missing! Please set REACT_APP_THEMOVIEDB_API_KEY in your .env.local file.'\n  );\n}\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async (query, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        query,\n        page,\n      },\n    });\n    return response.data; // повертаємо data, бо вона містить total_pages, total_results та results\n  } catch (error) {\n    console.error(`Error searching movies for \"${query}\":`, error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching movie details for ID ${movieId}:`, error);\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`);\n    return response.data.cast; // повертаємо лише акторський склад\n  } catch (error) {\n    console.error(`Error fetching movie credits for ID ${movieId}:`, error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async (movieId, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n      params: {\n        page,\n      },\n    });\n    return response.data.results; // повертаємо лише огляди\n  } catch (error) {\n    console.error(`Error fetching movie reviews for ID ${movieId}:`, error);\n    throw error;\n  }\n};\n","import React, { useState, useEffect, Suspense } from 'react';\nimport {\n  useParams,\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { getMovieDetails } from '../api/themoviedb-api';\nimport Loader from '../components/Loader';\nimport './pages.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation(); // Для збереження стану попередньої сторінки\n  const navigate = useNavigate(); // Для навігації назад\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchDetails = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const details = await getMovieDetails(movieId);\n        setMovie(details);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchDetails();\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    // Повертаємося на попередню сторінку, використовуючи savedFrom з location.state\n    // Якщо його немає, переходимо на '/' або '/movies' як fallback\n    navigate(location.state?.from || '/'); // або '/movies' залежить від логіки\n  };\n\n  if (isLoading) return <Loader />;\n  if (error)\n    return (\n      <p className=\"error-message\">\n        Oops! Something went wrong: {error.message}\n      </p>\n    );\n  if (!movie) return null; // Якщо фільм ще не завантажено\n\n  return (\n    <div className=\"container\">\n      <button type=\"button\" onClick={handleGoBack} className=\"go-back-btn\">\n        Go back\n      </button>\n\n      <div className=\"movie-details-card\">\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n              : 'https://via.placeholder.com/200x300.png?text=No+Image'\n          }\n          alt={movie.title || movie.name}\n          width=\"300\"\n        />\n        <div className=\"movie-info\">\n          <h2>\n            {movie.title || movie.name} (\n            {new Date(movie.release_date).getFullYear()})\n          </h2>\n          <p>\n            User Score:{' '}\n            {movie.vote_average ? Math.round(movie.vote_average * 10) : 'N/A'}%\n          </p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n        </div>\n      </div>\n\n      <hr />\n\n      <h3>Additional information</h3>\n      <ul className=\"additional-info-list\">\n        <li>\n          <Link to=\"cast\" state={{ from: location.state?.from || '/' }}>\n            Cast\n          </Link>{' '}\n          {/* Передаємо state назад */}\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location.state?.from || '/' }}>\n            Reviews\n          </Link>{' '}\n          {/* Передаємо state назад */}\n        </li>\n      </ul>\n\n      <hr />\n\n      {/* Outlet для рендерингу вкладених маршрутів (Cast або Reviews) */}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","process","af181d8638fc4af5618fbe58b42ee124","BASE_URL","console","error","axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","t0","stop","apply","arguments","searchMovies","_ref2","_callee2","query","page","_args2","_context2","length","undefined","params","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_args5","_context5","_x4","_location$state2","_location$state3","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setError","location","useLocation","navigate","useNavigate","useEffect","fetchDetails","details","finish","_jsx","Loader","_jsxs","className","children","message","type","onClick","_location$state","state","from","src","poster_path","alt","title","name","width","Date","release_date","getFullYear","vote_average","Math","round","overview","genres","map","genre","join","Link","to","Suspense","fallback","Outlet"],"sourceRoot":""}