{"version":3,"file":"static/js/134.e05057cd.chunk.js","mappings":"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","sources":["api/themoviedb-api.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = process.env.af181d8638fc4af5618fbe58b42ee124;\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// Перевірка наявності API ключа\nif (!API_KEY) {\n  console.error(\n    'API key is missing! Please set REACT_APP_THEMOVIEDB_API_KEY in your .env.local file.'\n  );\n}\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async (query, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        query,\n        page,\n      },\n    });\n    return response.data; // повертаємо data, бо вона містить total_pages, total_results та results\n  } catch (error) {\n    console.error(`Error searching movies for \"${query}\":`, error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching movie details for ID ${movieId}:`, error);\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`);\n    return response.data.cast; // повертаємо лише акторський склад\n  } catch (error) {\n    console.error(`Error fetching movie credits for ID ${movieId}:`, error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async (movieId, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n      params: {\n        page,\n      },\n    });\n    return response.data.results; // повертаємо лише огляди\n  } catch (error) {\n    console.error(`Error fetching movie reviews for ID ${movieId}:`, error);\n    throw error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { searchMovies } from '../api/themoviedb-api';\nimport Loader from '../components/Loader';\nimport './pages.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [inputValue, setInputValue] = useState(query); // Стан для керованого інпуту\n\n  useEffect(() => {\n    if (!query) {\n      setMovies([]); // Очистити фільми, якщо запит порожній\n      return;\n    }\n\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const data = await searchMovies(query);\n        if (data.results.length === 0) {\n          alert(`No movies found for \"${query}\".`); // Просте сповіщення\n        }\n        setMovies(data.results);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [query]); // Запускається, коли query в URL змінюється\n\n  const handleSearch = e => {\n    e.preventDefault();\n    const newQuery = inputValue.trim();\n    if (newQuery === '') {\n      alert('Please enter a search query.');\n      return;\n    }\n    setSearchParams({ query: newQuery }); // Оновлює URL\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Search Movies</h1>\n      <form onSubmit={handleSearch} className=\"search-form\">\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={e => setInputValue(e.target.value)}\n          placeholder=\"Search movies...\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {isLoading && <Loader />}\n      {error && (\n        <p className=\"error-message\">\n          Oops! Something went wrong: {error.message}\n        </p>\n      )}\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>\n                {movie.title || movie.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","process","af181d8638fc4af5618fbe58b42ee124","BASE_URL","console","error","axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","t0","stop","apply","arguments","searchMovies","_ref2","_callee2","query","page","_args2","_context2","length","undefined","params","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_args5","_context5","_x4","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","get","_useState","useState","_useState2","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setError","_useState7","_useState8","inputValue","setInputValue","useEffect","fetchMovies","alert","finish","_jsxs","className","children","_jsx","onSubmit","e","preventDefault","newQuery","trim","type","value","onChange","target","placeholder","Loader","message","map","movie","Link","to","id","title","name"],"sourceRoot":""}