{"version":3,"file":"static/js/134.48f69f2d.chunk.js","mappings":"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","sources":["api/themoviedb-api.js","components/Loader.jsx","components/MoviesList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'af181d8638fc4af5618fbe58b42ee124';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nif (!API_KEY) {\n  console.error(\n    'API key is missing! Please set REACT_APP_THEMOVIEDB_API_KEY in your .env.local file.'\n  );\n}\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`);\n    console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async (query, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        query,\n        page,\n      },\n    });\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error searching movies for \"${query}\":`, error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching movie details for ID ${movieId}:`, error);\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`);\n    console.log(response.data.cast);\n    return response.data.cast;\n  } catch (error) {\n    console.error(`Error fetching movie credits for ID ${movieId}:`, error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async (movieId, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n      params: {\n        page,\n      },\n    });\n    console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error fetching movie reviews for ID ${movieId}:`, error);\n    throw error;\n  }\n};\n","import React from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100px',\n      }}\n    >\n      <RotatingLines\n        visible={true}\n        height=\"96\"\n        width=\"96\"\n        color=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        ariaLabel=\"rotating-lines-loading\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"container\">\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title || movie.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from '../api/themoviedb-api';\nimport Loader from '../components/Loader';\nimport MoviesList from '../components/MoviesList';\nimport './pages.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [inputValue, setInputValue] = useState(query);\n\n  useEffect(() => {\n    if (!query) {\n      setMovies([]);\n      return;\n    }\n\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const data = await searchMovies(query);\n        if (data.results.length === 0) {\n          alert(`No movies found for \"${query}\".`);\n        }\n        setMovies(data.results);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [query]);\n  const handleSearch = e => {\n    e.preventDefault();\n    const newQuery = inputValue.trim();\n    if (newQuery === '') {\n      alert('Please enter a search query.');\n      return;\n    }\n    setSearchParams({ query: newQuery });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Search Movies</h1>\n      <form onSubmit={handleSearch} className=\"search-form\">\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={e => setInputValue(e.target.value)}\n          placeholder=\"Search movies...\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {isLoading && <Loader />}\n      {error && (\n        <p className=\"error-message\">\n          Oops! Something went wrong: {error.message}\n        </p>\n      )}\n      {!isLoading && !error && movies.length > 0 && (\n        <MoviesList movies={movies} />\n      )}\n      {!isLoading && !error && movies.length === 0 && query && (\n        <p>No movies found for \"{query}\".</p>\n      )}\n      {/* {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>\n                {movie.title || movie.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )} */}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","BASE_URL","axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","console","log","data","results","abrupt","t0","error","stop","apply","arguments","searchMovies","_ref2","_callee2","query","page","_args2","_context2","length","undefined","params","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_args5","_context5","_x4","_jsx","style","display","justifyContent","alignItems","height","children","RotatingLines","visible","width","color","strokeWidth","animationDuration","ariaLabel","movies","location","useLocation","className","map","movie","Link","to","id","state","from","title","name","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","get","_useState","useState","_useState2","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setError","_useState7","_useState8","inputValue","setInputValue","useEffect","fetchMovies","alert","finish","_jsxs","onSubmit","e","preventDefault","newQuery","trim","type","value","onChange","target","placeholder","Loader","message","MoviesList"],"sourceRoot":""}