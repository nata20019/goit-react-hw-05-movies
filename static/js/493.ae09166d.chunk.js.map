{"version":3,"file":"static/js/493.ae09166d.chunk.js","mappings":"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","sources":["api/themoviedb-api.js","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = process.env.af181d8638fc4af5618fbe58b42ee124;\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// Перевірка наявності API ключа\nif (!API_KEY) {\n  console.error(\n    'API key is missing! Please set REACT_APP_THEMOVIEDB_API_KEY in your .env.local file.'\n  );\n}\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async (query, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        query,\n        page,\n      },\n    });\n    return response.data; // повертаємо data, бо вона містить total_pages, total_results та results\n  } catch (error) {\n    console.error(`Error searching movies for \"${query}\":`, error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching movie details for ID ${movieId}:`, error);\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`);\n    return response.data.cast; // повертаємо лише акторський склад\n  } catch (error) {\n    console.error(`Error fetching movie credits for ID ${movieId}:`, error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async (movieId, page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n      params: {\n        page,\n      },\n    });\n    return response.data.results; // повертаємо лише огляди\n  } catch (error) {\n    console.error(`Error fetching movie reviews for ID ${movieId}:`, error);\n    throw error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../api/themoviedb-api';\nimport Loader from '../components/Loader';\nimport './pages.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchCast = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const movieCast = await getMovieCredits(movieId);\n        setCast(movieCast);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  if (isLoading) return <Loader />;\n  if (error)\n    return (\n      <p className=\"error-message\">\n        Oops! Something went wrong: {error.message}\n      </p>\n    );\n\n  return (\n    <div className=\"cast-section\">\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                    : 'https://via.placeholder.com/100x150.png?text=No+Photo'\n                }\n                alt={actor.name}\n                width=\"100\"\n              />\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No cast information available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","process","af181d8638fc4af5618fbe58b42ee124","BASE_URL","console","error","axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","t0","stop","apply","arguments","searchMovies","_ref2","_callee2","query","page","_args2","_context2","length","undefined","params","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_args5","_context5","_x4","useParams","_useState","useState","_useState2","_slicedToArray","setCast","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setError","useEffect","fetchCast","movieCast","finish","_jsx","Loader","_jsxs","className","children","message","map","actor","src","profile_path","alt","name","width","character","id"],"sourceRoot":""}